//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Foot"",
            ""id"": ""d017bb5d-8ff6-4c59-8fba-dabaaf845b4b"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""60aafd47-8be3-4677-ace7-1363aa207b25"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cc6e569d-56f5-436b-a547-03e1d9fe7925"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8445bb93-3df1-496c-8d8a-4f3fb942db6d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""04faa2f2-8125-4bc3-a118-24651ef09c29"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CallDragon"",
                    ""type"": ""Button"",
                    ""id"": ""4259fe48-3e52-4103-89d9-04ae7c15950a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4599a9b1-8e30-4398-9dfe-52dbed7bc9a1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3dc8584-90b1-43db-b20e-42bd1451a71f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe4c09b-031c-4c4e-a196-b1899eaa8551"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ed4bf375-68ec-4bad-9039-21ced873e13f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bea85aee-2605-4fcf-a344-170b726e9193"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e44bc029-3215-4457-bc48-8603f630c2be"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f0f80e1-ea1f-4464-afbd-8f898e591ad8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6ad09b2a-f205-4808-8a36-fbf7737c188c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ae422e2d-b140-4a6d-a4c7-29504384f7aa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""848a3a99-155e-4927-b128-7ec27a9a7cb0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d8778176-fdc2-4cb0-aee4-7bf8a19684ce"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4d165f47-cee3-490c-b501-61a93e42dde3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""89b0a903-6a55-48e3-840f-8a8378e42b9a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1028088c-b0b4-474b-bf7b-8e0a6dca3019"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a27cca4-ff3b-4534-9fc7-42fdd0078a43"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c87d81a6-f587-472c-a026-1d4ff715c8bf"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0167332b-8c6c-43c2-837f-d87883bc16e0"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallDragon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdc468fc-1167-41af-b16b-fc8a6247a2c8"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallDragon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dragon"",
            ""id"": ""b6863d2e-51bb-4ebd-ba11-87efc995ca6c"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""9e3524b6-0c63-4784-b196-ff6dd05ce2e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""83a569dd-a96e-4a4c-ae38-9efcb9ec4a4f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Foot
        m_Foot = asset.FindActionMap("Foot", throwIfNotFound: true);
        m_Foot_Jump = m_Foot.FindAction("Jump", throwIfNotFound: true);
        m_Foot_Move = m_Foot.FindAction("Move", throwIfNotFound: true);
        m_Foot_Camera = m_Foot.FindAction("Camera", throwIfNotFound: true);
        m_Foot_Run = m_Foot.FindAction("Run", throwIfNotFound: true);
        m_Foot_CallDragon = m_Foot.FindAction("CallDragon", throwIfNotFound: true);
        // Dragon
        m_Dragon = asset.FindActionMap("Dragon", throwIfNotFound: true);
        m_Dragon_Newaction = m_Dragon.FindAction("New action", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_Foot.enabled, "This will cause a leak and performance issues, InputActions.Foot.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Dragon.enabled, "This will cause a leak and performance issues, InputActions.Dragon.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Foot
    private readonly InputActionMap m_Foot;
    private List<IFootActions> m_FootActionsCallbackInterfaces = new List<IFootActions>();
    private readonly InputAction m_Foot_Jump;
    private readonly InputAction m_Foot_Move;
    private readonly InputAction m_Foot_Camera;
    private readonly InputAction m_Foot_Run;
    private readonly InputAction m_Foot_CallDragon;
    public struct FootActions
    {
        private @InputActions m_Wrapper;
        public FootActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Foot_Jump;
        public InputAction @Move => m_Wrapper.m_Foot_Move;
        public InputAction @Camera => m_Wrapper.m_Foot_Camera;
        public InputAction @Run => m_Wrapper.m_Foot_Run;
        public InputAction @CallDragon => m_Wrapper.m_Foot_CallDragon;
        public InputActionMap Get() { return m_Wrapper.m_Foot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FootActions set) { return set.Get(); }
        public void AddCallbacks(IFootActions instance)
        {
            if (instance == null || m_Wrapper.m_FootActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FootActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @CallDragon.started += instance.OnCallDragon;
            @CallDragon.performed += instance.OnCallDragon;
            @CallDragon.canceled += instance.OnCallDragon;
        }

        private void UnregisterCallbacks(IFootActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @CallDragon.started -= instance.OnCallDragon;
            @CallDragon.performed -= instance.OnCallDragon;
            @CallDragon.canceled -= instance.OnCallDragon;
        }

        public void RemoveCallbacks(IFootActions instance)
        {
            if (m_Wrapper.m_FootActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFootActions instance)
        {
            foreach (var item in m_Wrapper.m_FootActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FootActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FootActions @Foot => new FootActions(this);

    // Dragon
    private readonly InputActionMap m_Dragon;
    private List<IDragonActions> m_DragonActionsCallbackInterfaces = new List<IDragonActions>();
    private readonly InputAction m_Dragon_Newaction;
    public struct DragonActions
    {
        private @InputActions m_Wrapper;
        public DragonActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Dragon_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Dragon; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DragonActions set) { return set.Get(); }
        public void AddCallbacks(IDragonActions instance)
        {
            if (instance == null || m_Wrapper.m_DragonActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DragonActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IDragonActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IDragonActions instance)
        {
            if (m_Wrapper.m_DragonActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDragonActions instance)
        {
            foreach (var item in m_Wrapper.m_DragonActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DragonActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DragonActions @Dragon => new DragonActions(this);
    public interface IFootActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCallDragon(InputAction.CallbackContext context);
    }
    public interface IDragonActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
